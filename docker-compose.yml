version: '2'

services:
    mysql:
        image: mysql:5.7.38
        environment:
            - MYSQL_DATABASE=homestead
            - MYSQL_USER=homestead
            - MYSQL_PASSWORD=secret
            - MYSQL_ROOT_PASSWORD=secret
        volumes:
            - mysql-data:/var/lib/mysql:cached
            - mysql-files:/var/lib/mysql-files:cached

        ports:
            - "3306:3306"
        networks:
            - clinic-network

    app:
        container_name: app
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        environment:
            PHP_INI_SCAN_DIR: "/usr/local/etc/php/custom.d:/usr/local/etc/php/conf.d"
        volumes:
            - ./:/var/www/html:cached
            - ./docker/php:/usr/local/etc/php/custom.d
        links:
            - redis
            - mysql
        ports:
            - 3000:3000
            - 3001:3001
        expose:
            - 3000
            - 3001
        networks:
            - clinic-network

    nginx:
        image: nginx
        links:
            - app
        volumes:
            - ./public:/var/www/html/public:cached
            - ./storage/app:/var/www/html/storage/app:cached
            - ./storage/nginx-logs:/var/log/nginx:cached
            - ./docker/nginx/conf.d:/etc/nginx/conf.d:cached
        ports:
            - "80:80"
        expose:
            - 80
        networks:
            - clinic-network

    phpmyadmin:
        image: phpmyadmin
        environment:
            MEMORY_LIMIT: "4G"
            UPLOAD_LIMIT: "4G"
            MAX_EXECUTION_TIME: "9000"
            PMA_HOST: 'mysql'
            PMA_USER: 'homestead'
            PMA_PASSWORD: 'secret'
        ports:
            - 8080:80
        links:
            - mysql
        networks:
            - clinic-network

    redis:
        image: redis
        networks:
            - clinic-network

    # mail trap app
    mailhog:
        image: mailhog/mailhog:latest
        ports:
            - "1025:1025" #smtp server
            - "8025:8025" #web ui
        networks:
            - clinic-network

#Docker Networks
networks:
    clinic-network:
        driver: bridge

volumes:
    mysql-data:
    mysql-files:
